{% extends 'bootstrap_3_layout.html.twig' %}

{%- block lch_form_footer -%}
    {{ block('form_errors') }}
{%- endblock lch_form_footer -%}


{%- block form_widget -%}
    {% import _self as helper %}
    <div class="col-xs-12 {{ helper.widgetWidth(form) }} widget">
        {{- parent() -}}
        {{- block('lch_form_footer') -}}
    </div>
{%- endblock form_widget -%}

{% block form_row -%}
    {% if(form.vars.attr.width is defined) %}
        <div class="form-row" style="float: left; width: {{ form.vars.attr.width }}%">
    {% else %}
        <div class="form-row col-xs-12 no-gutter">
    {% endif %}
        {#{{- parent() -}}#}
        {% if form.vars.attr.no_label is not defined %}
            {{- form_label(form) -}}
        {% endif %}

        {{- form_widget(form) -}}
        <hr class="col-xs-10 col-xs-offset-1">
    </div>

{%- endblock form_row %}


{% block checkbox_row -%}
    {% if(form.vars.attr.width is defined) %}
        <div class="form-row" style="float: left; width: {{ form.vars.attr.width }}%">
    {% else %}
        <div class="form-row col-xs-12 no-gutter">
    {% endif %}
        <div class="form-group{% if not valid %} has-error{% endif %}">
            {{- form_widget(form) -}}
            {{- form_errors(form) -}}
        </div>
    </div>
{%- endblock checkbox_row %}

{% block radio_row -%}
    <div class="form-group{% if not valid %} has-error{% endif %}">
        {{- form_widget(form) -}}
        {{- form_errors(form) -}}
    </div>
{%- endblock radio_row %}

{% block form_label -%}
    {% import _self as helper %}
    <div class="col-xs-12 {{ helper.labelWidth(form) }}">
        {% if(form.parent.parent != null and (form.parent.vars.attr.force_two_columns_presentation is not defined)) %}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-xs-6')|trim}) -%}
        {% endif %}
        {{- parent() -}}
        {% if(form.vars.attr.helper is defined) %}
            <p class="helper {% if(form.parent.parent != null and (form.parent.vars.attr.force_two_columns_presentation is not defined)) %}text-right{% endif %}">
                <i class="glyphicon glyphicon-question-sign"></i>
                {{ form.vars.attr.helper|trans({}, form.vars.translation_domain)|raw }}
            </p>
        {% endif %}
    </div>
{%- endblock form_label %}


{%- block collection_widget -%}
    {% spaceless %}
        <div class="col-xs-12 {% if(form.parent.parent == null) %}col-md-10{% endif %} collection">
            {# For Symfony Collection Usage : https://github.com/ninsuo/symfony-collection #}
            {% if prototype is defined %}
                {#{% set attr = attr|merge({'data-prototype': form_row(prototype)}) %}#}
                {% set attr = attr|merge({'data-prototype': block('collection_item_widget')}) %}
                {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
            {% endif %}
            {% set attr = attr|merge({'data-allow-add': allow_add ? 1 : 0}) %}
            {% set attr = attr|merge({'data-allow-remove': allow_delete ? 1 : 0 }) %}
            {% set attr = attr|merge({'data-name-prefix': full_name}) %}
            {{ block('form_widget') }}
        </div>
    {% endspaceless %}
{%- endblock collection_widget -%}

{% block collection_item_widget %}
    <div class="col-xs-12 no-gutter">
        {#{{- parent() -}}#}
        {#{{- form_label(prototype) -}}#}
        {{- form_widget(prototype) -}}
        {#<hr class="col-xs-10 col-xs-offset-1">#}
    </div>
{% endblock collection_item_widget %}

{%- block textarea_widget -%}
    {% import _self as helper %}
    <div class="col-xs-12 {{ helper.widgetWidth(form) }} widget">
        {{- parent() -}}
        {{- block('lch_form_footer') -}}
    </div>
{%- endblock textarea_widget -%}

{%- block choice_widget -%}
    {% import _self as helper %}
    <div class="col-xs-12 {{ helper.widgetWidth(form) }} widget">
        {{- parent() -}}
        {{- block('lch_form_footer') -}}
    </div>
{%- endblock choice_widget -%}

{%- block submit_widget -%}
    {%- set attr = attr|merge({'class': 'btn-primary' })|merge({'icon': attr.icon|default('ok') }) -%}
    {{- parent() -}}
{%- endblock submit_widget -%}

{%- block number_widget -%}
     {#type="number" doesn't work with floats #}
    {%- set type = type|default('text') -%}
    {{ block('form_widget') }}
{%- endblock number_widget -%}

{%- block integer_widget -%}
    {#{%- set type = type|default('number') -%}#}
    {{ block('form_widget') }}
{%- endblock integer_widget -%}

{#{%- block money_widget -%}#}
    {#{{ money_pattern|replace({ '{{ widget }}': block('form_widget') })|raw }}#}
    {#<div class="input-group">#}
        {#{% set append = money_pattern starts with '{{' %}#}
        {#{% if not append %}#}
            {#<span class="input-group-addon">{{ money_pattern|replace({ '{{ widget }}':''}) }}</span>#}
        {#{% endif %}#}
        {#{{- block('form_widget_simple') -}}#}
        {#{% if append %}#}
            {#<span class="input-group-addon">{{ money_pattern|replace({ '{{ widget }}':''}) }}</span>#}
        {#{% endif %}#}
    {#</div>#}
{#{%- endblock money_widget -%}#}

{%- block url_widget -%}
    {%- set type = type|default('url') -%}
    {{ block('form_widget') }}
{%- endblock url_widget -%}

{%- block search_widget -%}
    {%- set type = type|default('search') -%}
    {{ block('form_widget') }}
{%- endblock search_widget -%}

{#{%- block percent_widget -%}#}
    {#{%- set type = type|default('text') -%}#}
    {#{{ block('form_widget') }} %#}
{#{%- endblock percent_widget -%}#}

{%- block password_widget -%}
    {%- set type = type|default('password') -%}
    {{ block('form_widget') }}
{%- endblock password_widget -%}

{%- block email_widget -%}
    {%- set type = type|default('email') -%}
    {{ block('form_widget') }}
{%- endblock email_widget -%}

{%- block range_widget -%}
    {% set type = type|default('range') %}
    {{- block('form_widget') -}}
{%- endblock range_widget %}

{% block datetime_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget') -}}
    {% else -%}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) -%}
        <div {{ block('widget_container_attributes') }}>
            {{- form_errors(form.date) -}}
            {{- form_errors(form.time) -}}
            {{- form_widget(form.date, { datetime: true } ) -}}
            {{- form_widget(form.time, { datetime: true } ) -}}
        </div>
    {%- endif %}
{%- endblock datetime_widget %}

{% block date_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget') -}}
    {% else -%}
        {# TODO : finalize presentation for other cases #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) -%}
        {% if datetime is not defined or not datetime -%}
            <div {{ block('widget_container_attributes') -}}>
        {%- endif %}
            {{- date_pattern|replace({
                '{{ year }}': form_widget(form.year),
                '{{ month }}': form_widget(form.month),
                '{{ day }}': form_widget(form.day),
            })|raw -}}
        {% if datetime is not defined or not datetime -%}
            </div>
        {%- endif -%}
    {% endif %}
{%- endblock date_widget %}

{% block time_widget -%}
    {% if widget == 'single_text' %}
        {{- block('form_widget') -}}
    {% else -%}
        {# TODO : finalize presentation for other cases #}
        {% set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) -%}
        {% if datetime is not defined or false == datetime -%}
            <div {{ block('widget_container_attributes') -}}>
        {%- endif -%}
        {{- form_widget(form.hour) }}{% if with_minutes %}:{{ form_widget(form.minute) }}{% endif %}{% if with_seconds %}:{{ form_widget(form.second) }}{% endif %}
        {% if datetime is not defined or false == datetime -%}
            </div>
        {%- endif -%}
    {% endif %}
{%- endblock time_widget %}

{%- block dateinterval_widget -%}
    {%- if widget == 'single_text' -%}
        {{- block('form_widget_simple') -}}
    {%- else -%}
        {# TODO : finalize presentation for other cases #}
        {%- set attr = attr|merge({class: (attr.class|default('') ~ ' form-inline')|trim}) -%}
        <div {{ block('widget_container_attributes') }}>
            {{- form_errors(form) -}}
            {%- if with_years %}{{ form_widget(form.years) }}{% endif -%}
            {%- if with_months %}{{ form_widget(form.months) }}{% endif -%}
            {%- if with_weeks %}{{ form_widget(form.weeks) }}{% endif -%}
            {%- if with_days %}{{ form_widget(form.days) }}{% endif -%}
            {%- if with_hours %}{{ form_widget(form.hours) }}{% endif -%}
            {%- if with_minutes %}{{ form_widget(form.minutes) }}{% endif -%}
            {%- if with_seconds %}{{ form_widget(form.seconds) }}{% endif -%}
            {%- if with_invert %}{{ form_widget(form.invert) }}{% endif -%}
        </div>
    {%- endif -%}
{%- endblock dateinterval_widget -%}


{% block button_widget -%}
    {% set attr = attr|merge({class: (attr.class|default('btn-default') ~ ' btn')|trim}) %}
    {%- if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
            '%name%': name,
            '%id%': id,
            }) %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}
    <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>
        {% if attr['icon'] is defined %}
            <i class="glyphicon glyphicon-{{ attr['icon'] }}"></i>
        {% endif %}
        {{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}
    </button>
{%- endblock %}


{% block form_errors -%}
    {% if errors|length > 0 -%}
        <div class="errors alert alert-danger col-xs-12 col-md-6">
            <ul class="list-unstyled">
                {%- for error in errors -%}
                    <li><span class="glyphicon glyphicon-exclamation-sign"></span> {{ error.message }}</li>
                {%- endfor -%}
            </ul>
        </div>
    {%- endif %}
{%- endblock form_errors %}


{# Checks #}

{% macro widgetWidth(form) %}
    {% spaceless %}
        {% if ((form.parent.parent == null or (form.parent.vars.attr.force_two_columns_presentation is defined and form.parent.vars.attr.force_two_columns_presentation == true)) and form.vars.data is not iterable and form.vars.attr.width is not defined) %}
            col-md-10
        {% endif %}
    {% endspaceless %}
{% endmacro %}


{% macro labelWidth(form) %}
    {% spaceless %}
        {% if (form.parent.parent == null or (form.parent.vars.attr.force_two_columns_presentation is defined and form.parent.vars.attr.force_two_columns_presentation == true)) and form.vars.attr.width is not defined %}
            col-md-2
        {% endif %}
    {% endspaceless %}
{% endmacro %}


{% block lch_admin_select2_widget %}
{% spaceless %}
{{ block('choice_widget') }}
{#<script>#}
{#$(function() {#}
    {##}
{#});#}
{#</script>#}
{% endspaceless %}
<script>
$(function() {
$("#{{ form.vars['id'] }}").select2({
   {# Placeholder #}
   placeholder : "{{ form.vars['placeholder']|trans }}",
   allowClear: true,
   {# AJAX #}
   {% if(form.vars['ajax'] is defined) %}
       ajax: {
           url: "{{ path(form.vars['ajax']['route']) }}",
           dataType: 'json',
           method: 'POST',
           delay: 250,
           data: function (params) {
               return {
                   q: params.term, // search term
                   page: params.page
               };
           },
           processResults: function (data, params) {
               // parse the results into the format expected by Select2
               // since we are using custom formatting functions we do not need to
               // alter the remote JSON data, except to indicate that infinite
               // scrolling can be used
               params.page = params.page || 1;

               return {
                   results: data.items,
                   pagination: {
                       more: (params.page * 30) < data.total_count
                   }
               };
           },
           cache: true
       },
        templateSelection : function(item) {
            return item.text;
        },
        templateResult: function (item) {
           return {{ form.vars['ajax']['template_result']|raw }};
        },
   {% endif %}
   {% if(form.vars['minimum_input_length'] is defined) %}
        minimumInputLength: {{ form.vars['minimum_input_length'] }},
   {% endif %}
});
$("#{{ form.vars['id'] }}").trigger('change');
});
</script>
{% endblock %}